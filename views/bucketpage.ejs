<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <meta name="description" content="">
        <meta name="author" content="">

        <title>Konviv App</title>

        <!-- Latest compiled and minified CSS -->
        <link rel="stylesheet" type="text/css" href="style.css">
        <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
        <meta name="viewport" content="width=device-width, initial-scale=1">
    </head>
    <style>
        .back {
            font-size: 18px;
            text-decoration: none!important;
            color: #444;
            text-shadow: 0 0 10px rgba(0,0,0,0.3);
            letter-spacing:1px;
        }
    </style>

    <body>
        <div id="banner">
            <h1> K O N V I V </h1>
            <p id="intro"> </p>
        </div>
        <div class ="box">

            <div class="head">
                <h1 id= "page title" style="font-size:35px;"> </h1>
            </div>
            <p><a class="back" style="font-size:25px;" href="/index.ejs">< Back</a></p> <br><br>

            <div id="get-button-data"></div>

            <div class="template">

                <input id="editName" placeholder="New Bucket Name"/>
                <button id="btnName" class="btn btn-secondary btn-block btn-large">Edit Name</button>
                <br/>
                <input id="editSizeAmount" placeholder="Bucket Amount to Move" />
                <br/>
                <input id="editSizeBucket" placeholder="New Bucket for Amount" />
                <button id="btnSize" class="btn btn-secondary btn-block btn-large">Edit Size</button>
                <br/>
                <input id="moveTransactionName" placeholder="Transaction to Move" />
                <br/>
                <input id="moveTransactionBucket" placeholder="New Bucket to Move Transaction" />
                <button id="btnMove" class="btn btn-secondary btn-block btn-large">Move Transaction</button>
                <br/>

                <div id='get-button-data'> </div>
                <br /><br /><br /><br /><br /><br /><br /><br />
                  <div style="margin-top:300px; text-align:center; margin:10px 5px; font-color: #fff"><p style="font-size:14px; color:#DDD;">Konviv uses a secure connection and 256-bit encryption just like your bank!</p></div>
            </div>
        </div>


    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <script>
        $(document).ready(function() {
            if (sessionStorage.getItem("token") && sessionStorage.getItem("bucketPage")) {
                console.log("bucket page loaded for " + sessionStorage.getItem(sessionStorage.getItem("bucketPage")));
            } else {
                location.href="/login.ejs";
            }

            get_details();

            $("[id='btnName']").on("click", rename_bucket);
            $("[id='btnSize']").on("click", change_size);

            var selector = "[id='page title']";

            $(selector).text("Edit "  + sessionStorage.getItem(sessionStorage.getItem("bucketPage")) + " Bucket").end();

        function get_details(){
           //modal.style.display = "block";
           $.post('/get_info',{
               which_bucket:sessionStorage.getItem("bucketPage"),
               token: sessionStorage.token
           }, function(data) {
               console.log(data);
               buttonValue = "transactions";
               if (data.error != null) {
                   // Format the error
                   var errorHtml = '<div class="inner"><p>' +
                   '<strong>' + data.error.error_code + ':</strong> ' +
                   data.error.error_message + '</p></div>';
                   if (data.error.error_code === 'PRODUCT_NOT_READY') {
                       // Add additional context for `PRODUCT_NOT_READY` errors
                       errorHtml += '<div class="inner"><p>The PRODUCT_NOT_READY ' +
                       'error is returned when a request to retrieve Transaction data ' +
                       'is made before Plaid finishes the <a href="https://plaid.com/' +
                       'docs/quickstart/#transaction-data-with-webhooks">initial ' +
                       'transaction pull.</a></p></div>';
                   }
                   // Render the error
                   $('#get-button-data').slideUp(function() {
                       $(this).slideUp(function() {
                           $(this).html(errorHtml).slideDown();
                       });
                   });
               } else {
                   $('#get-button-data').slideUp(function() {
                       var html = '';
                       data.transactions.forEach(function(txn, idx) {
                           //code for displaying category for each transaction
                           html += '<div class="inner">';
                           html += '<strong>' + txn.name + '</strong><br>';
                           html += '<em>' + txn.bucket + '</em><br>';
                           html += '$' + txn.amount + '<br>';
                           html += '<em>' + txn.date + '</em>';
                           html += '</div>';
                       });
                       $(this).slideUp(function() {
                           $(this).html(html).slideDown();
                       });
                   });
               }
           });

        }

         function rename_bucket(){
           //modal.style.display = "block";
           if (editName.value===''){
               $('[id=get-button-data]').text("Enter a Valid Bucket Name");
           }
           else{
              $.post('/rename_bucket',{
                  which_bucket:sessionStorage.getItem("bucketPage"),
                  new_name:editName.value,
                  token: sessionStorage.token
              }, callResult);
           }
        }
         function change_size(){
            $.post('/change_size',{
                amount:editSizeAmount.value,
                from_bucket:sessionStorage.getItem("bucketPage"),
                to_bucket:editSizeBucket.value,
                token: sessionStorage.token
            }, callResult);
         }

         function callResult(data) {
             if (data.error != null) {
                 if (data.message == 'Failed to authenticate token.') {
                     sessionStorage.clear();
                     location.href = '/';
                 }
                 // Format the error
                 var errorHtml = '<div class="inner"><p><strong>' + data.error.message + '</strong></p></div>';
                 // Render the error

                 $('#get-button-data').slideUp(function() {
                     $(this).slideUp(function() {
                         $(this).html(errorHtml).slideDown();
                     });
                 });
                 // Using for loop to pull information for each bucket from data
             } else {
                 var successHtml = '<div class="inner"><p><strong> Edit Success! </strong></p></div>';
                 // Render the error

                 $('#get-button-data').slideUp(function() {
                     $(this).slideUp(function() {
                         $(this).html(successHtml).slideDown();
                     });
                 });
             }
         };

         btnName.addEventListener('click', e => {
             var errorCode = null;
             var errorMsg = null;

             //Sign up
             $(function () {

             });
         });
     });
     </script>
</body>
</html>
