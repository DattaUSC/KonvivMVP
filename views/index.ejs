<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Konviv MVP</title>
        <link rel="stylesheet" type="text/css" href="style.css">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <style>
@import url('https://fonts.googleapis.com/css?family=Lato');
</style>
    </head>
    <body>
        <div id="banner">
            <h1> K O N V I V </h1>
            <p id="intro"> </p>
    <!--     <p id="steps">
          Great - you just created an Item! The server was successfully able to exchange the public_token for an access_token.
          Below are a few options - you can get account data, retrieve information about the Item itself, or pull transaction data.
        </p> -->
        </div>

        <div id="menu">
            <div class="box">
                <button class="headerbutton" style="margin:10px 10px 10px 14px;" id="get-accounts-btn"><img src="https://raw.githubusercontent.com/DattaUSC/apichackers/master/geticon.png" alt="Transactions" desc="Transactions" style="width:40px;"><br /><span style="font-size:10px; color:#222;">Accounts</span></button>
                <button class="headerbutton" style="margin:10px 10px;" id="get-transactions-btn"><img src="https://raw.githubusercontent.com/DattaUSC/apichackers/master/accounts.png" alt="Transactions" desc="Transactions" style="width:40px;"><br /><span style="font-size:10px; color:#222;">Transactions</span></button>
                <button class="headerbutton" style="margin:10px 10px;" id="get-link-btn"><img src="https://raw.githubusercontent.com/DattaUSC/apichackers/master/transactions.png" alt="Transactions" desc="Transactions" style="width:40px;"><br /><span style="font-size:10px; color:#222;">Switch Bank</span></button>
                <button style="margin:10px 10px;" class="logout-btn headerbutton"><img src="https://raw.githubusercontent.com/DattaUSC/apichackers/master/logout.png" alt="Transactions" desc="Transactions" style="width:40px;"><br /><span style="font-size:10px; color:#222;">Logout</span></button>
            </div>
            <div id="get-button-data"></div>
        </div>

        <!-- <div id = "demo-help">
            <div class = "box">
                <button class="demo">demo</button>
                <button class="help">help</button>
            </div>
        </div> -->

        <div class ="box">
            <div class="head">
                <h1> Emergency Savings Goal </h1>
            </div>
            <div class = "body">
                <div id = "Savings Account">
                    <div class="wrap-savings">
                        <div class="circle-savings" id="Emergency Savings">
                            <div class="perc-savings">
                                <div class="perc-value-savings"></div>
                            </div>
                            <span class="top-savings"></span>
                            <span class="bottom-savings"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class ="box">
            <div class="head">
                <h1> Amount Left <h1>
            </div>
            <div class = "body">
                 <div id="left-to-spend">
                     loading
                 </div>
                 <div id="string"> total amount left to spend for the month</div>
            </div>
        </div>


        <div class ="box">
            <div class="head">
                <h1> Monthly Income <h1>
            </div>

            <div class="body">
                <div id="monthly-income">
                    loading
                </div>
                <div id="string">
                    monthly amount of money recieved
                </div>
            </div>
        </div>

        <div class="box">
            <div class = "body">
                <div class = "head">
                    <h1> Monthly Spending Buckets </h1>
                </div>
                <div class = "wrap">
                    <div id = "total-spending">
                        loading
                    </div>
                    <div class="circle" id="Variable Bills" onclick="get_details('Variable Bills')" style="cursor: pointer;">
                        <div class="perc">
                            <div class="perc-value"></div>
                        </div>
                        <span class="top"></span>
                        <span class="bottom"></span>
                    </div>
                    <div class="circle" id="Eating Out" onclick="get_details('Eating Out')" style="cursor: pointer;">
                        <div class="perc">
                            <div class="perc-value"></div>
                        </div>
                        <span class="top"></span>
                        <span class="bottom"></span>
                    </div>
                    <div class="circle" id="Entertainment" onclick="get_details('Entertainment')" style="cursor: pointer;">
                        <div class="perc">
                            <div class="perc-value"></div>
                        </div>
                        <span class="top"></span>
                        <span class="bottom"></span>
                    </div>
                    <div class="circle" id="Groceries" onclick="get_details('Groceries')" style="cursor: pointer;">
                        <div class="perc">
                            <div class="perc-value"></div>
                        </div>
                        <span class="top"></span>
                        <span class="bottom"></span>
                    </div>
                    <div class="circle" id="Other Spending" onclick="get_details('Other Spending')" style="cursor: pointer;">
                        <div class="perc">
                            <div class="perc-value"></div>
                        </div>
                        <span class="top"></span>
                        <span class="bottom"></span>
                    </div>
                    <div class="circle" id="Shopping" onclick="get_details('Shopping')" style="cursor: pointer;">
                        <div class="perc">
                            <div class="perc-value"></div>
                        </div>
                        <span class="top"></span>
                        <span class="bottom"></span>
                    </div>
                    <div class="circle" id="Transportation" onclick="get_details('Transportation')" style="cursor: pointer;">
                        <div class="perc">
                            <div class="perc-value"></div>
                        </div>
                        <span class="top"></span>
                        <span class="bottom"></span>
                    </div>
                </div>
            </div>
        </div>

        <div class ="box">
            <div class="head">
                <h1> Monthly Fixed Bills</h1>
            </div>
            <div class = "body">
                <div id = "monthly-fixed-bills">
                    <div id = "total-bills">
                        loading
                    </div>
                    <div class="wrap-bills">
                        <div class="circle-bills" id="Rent and Mortgage">
                            <div class="perc-bills">
                                <div class="perc-value-bills"></div>
                            </div>
                            <span class="top-bills">Rent and Mortgage</span>
                            <span class="bottom-bills"></span>
                        </div>

                        <div class="circle-bills" id="Loans">
                            <div class="perc-bills">
                                <div class="perc-value-bills"></div>
                            </div>
                            <span class="top-bills">Loans</span>
                            <span class="bottom-bills"></span>
                        </div>
                        <div class="circle-bills" id="Insurance">
                            <div class="perc-bills">
                                <div class="perc-value-bills"></div>
                            </div>
                            <span class="top-bills">Insurance</span>
                            <span class="bottom-bills"></span>
                        </div>
                        <div class="circle-bills" id="Subscriptions">
                            <div class="perc-bills">
                                <div class="perc-value-bills"></div>
                            </div>
                            <span class="top-bills">Subscriptions</span>
                            <span class="bottom-bills"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
        <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
        <script src="https://www.gstatic.com/firebasejs/4.1.4/firebase.js"></script>

        <script>
            var testTimePeriod = 6;

            if (sessionStorage.token) {
                console.log('currently logged in');
            } else {
                location.href="/";
                console.log("currently logged out");
            }
            // Initialize Firebase
            var config = {
                apiKey: "AIzaSyASB9RhrUzNme-rGkVrzEXmF3nL7PwMgvQ",
                authDomain: "konvivandroid.firebaseapp.com",
                databaseURL: "https://konvivandroid.firebaseio.com",
                projectId: "konvivandroid",
                storageBucket: "konvivandroid.appspot.com",
                messagingSenderId: "41760220514"
            };
            firebase.initializeApp(config);
            // $.get('/log_in_status', function(data) {
            //     logOutSuccess(!data.login);
            // });
            function logOutSuccess(logout) {
                if (logout == true) {
                    location.href="/";
                    console.log("currently logged out");
                } else {
                    console.log('unable to log out');
                    console.log('token: ' + sessionStorage.token);
                }
            };
            var buttonValue = '';
            var handler = Plaid.create({
                apiVersion: 'v2',
                clientName: 'Konviv MVP',
                env: 'development',
                product: ['transactions'],
                key: '9f4ef21fdb37b5c0e3f80290db7716',
                onSuccess: function(public_token) {
                    // alert('calling /get_access_token...')
                    $.post('/get_access_token', {
                        token: sessionStorage.getItem("token"),
                        publicToken: public_token,
                        userId: sessionStorage.getItem("userId")
                    }, function() {
                        location.href="index.ejs";
                    });
                }
            });
            
            //Bucket Functionalities START here...
            
             function get_details(bucket_name){
                console.log(bucket_name)
                //modal.style.display = "block";
                $.post('/get_info',{
                    which_bucket:bucket_name,
                    token: sessionStorage.token
                });
             }
             
              function rename_bucket(bucket_name){
                console.log(bucket_name)
                //modal.style.display = "block";
                $.post('/rename_bucket',{
                    which_bucket:bucket_name,
                    token: sessionStorage.token
                });
             }
             
             // Bucket Functionalities END here...

            // RESTful calls to index.js server using post function
            $.post('/savings', {
                token: sessionStorage.token,
                months: testTimePeriod
            }, function(data) {
                // Catching error

                if (data.error != null) {
                    // Format the error
                    var errorHtml = '<div class="inner"><p><strong>' + data.error.message + '</strong></p></div>';
                    // Render the error

                    $('#get-button-data').slideUp(function() {
                        $(this).slideUp(function() {
                            $(this).html(errorHtml).slideDown();
                        });
                    });
                    // Using for loop to pull information for each bucket from data
                } else {
                    console.log(data)
                    var bucket = data;
                    var fillPercent = 0;

                    // Accounting for divide-by-zero error
                    if (bucket['Total'] > 0) {
                        fillPercent = 100 - (bucket['Savings']/bucket['Total'])*100
                    }
                    bucketSavings = Math.round(bucket['Savings']*100)/100;
                    bucketTotal = Math.round(bucket['Total']*100)/100;
                    newPercent = fillPercent;

                    var selector = "[id='Savings Account']";

                    $(selector)
                        .find(".top-savings").text("Savings Account").end()
                        .find(".bottom-savings").text("$" + bucketSavings + " of $" + bucketTotal).end()
                        .find(".perc-value-savings").css("height", newPercent + "%")
                }
            });

            $.post('/buckets', {
                token: sessionStorage.token
            }, function(data) {
                // Catching error

                if (data.error != null) {
                    // Format the error
                    var errorHtml = '<div class="inner"><p><strong>' + data.error.message + '</strong></p></div>';
                    // Render the error

                    $('#get-button-data').slideUp(function() {
                        $(this).slideUp(function() {
                            $(this).html(errorHtml).slideDown();
                        });
                    });
                    // Using for loop to pull information for each bucket from data
                } else {
                    console.log(data)
                    var totalBills = 0;
                    var totalSpending= 0;

                    for (var bucketClass in data) {
                        totalAmount=0;

                        for (var key in data[bucketClass]) {

                            var bucket = data[bucketClass][key];
                            var fillPercent = 0;

                            // Accounting for divide-by-zero error
                            if (bucket['Total'] > 0) {
                                fillPercent = (bucket['Spending']/bucket['Total'])*100
                            }

                            bucketSpent = Math.round((bucket['Total'] - bucket['Spending'])*100)/100;
                            bucketTotal = Math.round(bucket['Total']*100)/100;
                            newPercent = fillPercent;

                             var selector = '[id="' + key + '"]';

                             $(selector)
                                .find(".top-bills,.top").text(key).end()
                                .find(".bottom-bills,.bottom").text("$" + bucketSpent + " of $" + bucketTotal).end()
                                .find(".perc-value-bills,.perc-value").css("height", newPercent + "%")

                                /* INCOME CLASS */
                                income = -(data['Income Buckets']['Income']['Total'])

                                $("#monthly-income").text("$" + income.toFixed(2))

                            totalAmount += bucketSpent;
                            /*edit: bucketTotal*/

                            if (bucketClass == 'Fixed Buckets'){
                                totalBills += data[bucketClass][key]['Total'];
                            } else if (bucketClass == 'Spending Buckets'){
                                totalSpending += data[bucketClass][key]['Total'];
                            }

                        }

                       var left = income - totalBills - totalSpending;

                       $("#left-to-spend").text("$" + left.toFixed(2));
                       $("#total-bills").text("Total Bills: $" +totalBills.toFixed(2));
                       $("#total-spending").text("Total Spending: $" +totalSpending.toFixed(2));
                   }
               }
           });

           (function($) {
               $('#get-link-btn').on('click', function(e) {
                   handler.open()
               });
               $('.logout-btn').on('click', function(e) {
                   console.log("logging out...");
                   sessionStorage.clear();
                   logOutSuccess(true)
                });
                $('#get-accounts-btn').on('click', function(e) {
                    if ($('#get-button-data').is(':visible') && buttonValue == "account") {
                        buttonValue = "";
                        return $('#get-button-data').slideUp();
                    }
                    console.log('accounts called...')

                    $.post('/accounts', {
                        token: sessionStorage.token
                    }, function(data) {
                        console.log("Account info: " + data)
                        buttonValue = "account";
                        $('#get-button-data').slideUp(function() {
                            var html = '<div class="inner">';
                            // html += '<p><b>BASIC INFORMATION ABOUT YOUR BANK ACCOUNT<b></p> <br>';
                            html += '<p><strong>Bank Account: </strong> ' + data.institution.name + '</p>';
                            html += '<p>Billed products: ' + data.item.billed_products.join(', ') + '</p>';
                            html += '<p>Available products: ' + data.item.available_products.join(', ') + '</p>';
                            html += '<br>';
                            data.accounts.forEach(function(account, idx) {
                                // html += '<div class="inner">';
                                html += '<strong>' + account.name +
                                ' $' + (account.balances.available != null ? account.balances.available : account.balances.current) + '</strong><br>';
                                html += account.subtype + ' ' + account.mask;
                                // html += '</div>';
                                html += '<br>';
                            });
                            html += '</div>';

                            $(this).html(html).slideDown();
                        });
                    });
                });
                $('#get-item-btn').on('click', function(e) {
                    if ($('#get-button-data').is(':visible') && buttonValue == "item") {
                        buttonValue = "";
                        return $('#get-button-data').slideUp();
                    }
                    $.post('/item', {
                        token: sessionStorage.token
                    }, function(data) {
                        buttonValue = "item";
                        $('#get-button-data').slideUp(function() {
                            if (data.error) {
                                $(this).html('<p>' + data.error + '</p>').slideDown();
                            } else {
                                var html = '<div class="inner">';
                                // html += '<p><b>BASIC INFORMATION ABOUT YOUR BANK ACCOUNT<b></p> <br>';
                                html += '<p><b>Bank Account</b> ' + data.institution.name + '</p>';
                                // html += '<p>Billed products: ' + data.item.billed_products.join(', ') + '</p>';
                                // html += '<p>Available products: ' + data.item.available_products.join(', ') + '</p>';
                                html += '</div>';
                                $(this).html(html).slideDown();
                            }
                        });
                    });
                });
                $('#get-transactions-btn').on('click', function(e) {
                    if ($('#get-button-data').is(':visible') && buttonValue == "transactions") {
                        buttonValue = "";
                        return $('#get-button-data').slideUp();
                    }
                    $.post('/transactions', {
                        token: sessionStorage.token
                    }, function(data) {
                        buttonValue = "transactions";
                        if (data.error != null) {
                            // Format the error
                            var errorHtml = '<div class="inner"><p>' +
                            '<strong>' + data.error.error_code + ':</strong> ' +
                            data.error.error_message + '</p></div>';
                            if (data.error.error_code === 'PRODUCT_NOT_READY') {
                                // Add additional context for `PRODUCT_NOT_READY` errors
                                errorHtml += '<div class="inner"><p>The PRODUCT_NOT_READY ' +
                                'error is returned when a request to retrieve Transaction data ' +
                                'is made before Plaid finishes the <a href="https://plaid.com/' +
                                'docs/quickstart/#transaction-data-with-webhooks">initial ' +
                                'transaction pull.</a></p></div>';
                            }
                            // Render the error
                            $('#get-button-data').slideUp(function() {
                                $(this).slideUp(function() {
                                    $(this).html(errorHtml).slideDown();
                                });
                            });
                        } else {
                            $('#get-button-data').slideUp(function() {
                                var html = '';
                                data.transactions.forEach(function(txn, idx) {
                                    //code for displaying category for each transaction
                                    html += '<div class="inner">';
                                    html += '<strong>' + txn.name + '</strong><br>';
                                    html += '<em>' + txn.bucket + '</em><br>';
                                    html += '$' + txn.amount + '<br>';
                                    html += '<em>' + txn.date + '</em>';
                                    html += '</div>';
                                });
                                $(this).slideUp(function() {
                                    $(this).html(html).slideDown();
                                });
                            });
                        }
                    });
                });
            })(jQuery);
        </script>
    </body>
</html>
